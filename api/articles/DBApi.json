{"title":"利用LightHouse和LightDB实现零代码创建和管理API","slug":"DBApi","date":"2022-04-30T08:05:17.454Z","updated":"2022-04-30T08:36:57.595Z","comments":true,"path":"api/articles/DBApi.json","excerpt":null,"covers":["https://ics.iczkj.com/pic/2022/04/16/a88b9f8c958f5.png","https://ics.iczkj.com/pic/2022/04/16/f14f3bb534be1.png","https://ics.iczkj.com/pic/2022/04/16/d7b4b43ac5543.png","https://ics.iczkj.com/pic/2022/04/16/290f2465315a8.png","https://ics.iczkj.com/pic/2022/04/16/153685d46daa0.png","https://ics.iczkj.com/pic/2022/04/16/40a4773713f1f.png","https://ics.iczkj.com/pic/2022/04/16/4edc3701b0e22.png","https://ics.iczkj.com/pic/2022/04/16/e80d3609d6936.png","https://ics.iczkj.com/pic/2022/04/16/413ad7b55aa83.png","https://ics.iczkj.com/pic/2022/04/16/9e4b1680e1df3.png","https://ics.iczkj.com/pic/2022/04/16/c6d91374ded74.png","https://ics.iczkj.com/pic/2022/04/16/05f6cf65e69e8.png","https://ics.iczkj.com/pic/2022/04/16/1ba74bf75bd42.png","https://ics.iczkj.com/pic/2022/04/16/f61f488012c0e.png","https://ics.iczkj.com/pic/2022/04/16/ad324bcaaf04a.png","https://ics.iczkj.com/pic/2022/04/16/4b56b820a22c4.png","https://ics.iczkj.com/pic/2022/04/16/4a343add28c59.png","https://ics.iczkj.com/pic/2022/04/16/b128731aa6dd5.png","https://ics.iczkj.com/pic/2022/04/16/6faac4c3ae33a.png","https://ics.iczkj.com/pic/2022/04/16/f34c9342e7978.png","https://ics.iczkj.com/pic/2022/04/16/983d3085170d2.png","https://ics.iczkj.com/pic/2022/04/16/bb73ac6f1e7f9.png"],"content":"<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>最近因业务需要创建可以对外查询的 API 来供其他人使用，但是本人纯小白一枚，不会写相关代码，非常苦恼。而且处于项目初期，没有太多的经费购买服务器，之前了解过服务器的购买流程，对我这种个人来说，真的是很贵了。直到我遇到了 LightHouse 和 LightDB：轻量应用服务器和轻量艺应用数据库。非常适合我这种小白个人开发者，不仅价格实惠，性能也不比服务器差，而且带宽也很高。所以本次教程就用 LightHouse 和 LightDB 来进行演示。</p>\n<h2 id=\"dbapi\"><a class=\"anchor\" href=\"#dbapi\">#</a> DBApi</h2>\n<h3 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<ul>\n<li>快速生成数据库的 http 接口服务，零代码开发，只需编写 sql，就可以生成 http api 服务。是数据库的上层应用，方便数据库数据对外发布 http 服务。</li>\n</ul>\n<h3 id=\"使用场景\"><a class=\"anchor\" href=\"#使用场景\">#</a> 使用场景</h3>\n<ul>\n<li>BI 报表、数据可视化大屏的后端接口快速开发；</li>\n<li>前端程序员快速开发后端接口进行接口联调；</li>\n<li>企业数据资产对外快速发布 http 服务及统一管理；</li>\n<li>企业数据接口的统一管理中心。</li>\n</ul>\n<h3 id=\"特点\"><a class=\"anchor\" href=\"#特点\">#</a> 特点</h3>\n<ul>\n<li>开箱即用，不需要编程，不需要依赖其他软件（只需要 java 运行环境）</li>\n<li>支持单机模式、集群模式；支持云原生容器化部署</li>\n<li>支持 API 级别的访问权限控制，支持 IP 白名单、黑名单控制</li>\n<li>支持所有类型数据库（JDBC 连接方式），包括 mysql/sqlserver/postgreSql/hive/oracle 等等</li>\n<li>支持动态 sql，类似 mybatis 的动态 sql，支持 sql 编辑、运行、调试</li>\n<li>支持 API 结果缓存，支持缓存开启 / 关闭（通过插件实现）</li>\n<li>支持自定义代码逻辑的数据转换，比如数据脱敏（通过插件实现）</li>\n<li>支持 API 配置导入导出，方便测试环境到生产环境的 API 迁移</li>\n<li>支持一个接口内多条 SQL 执行（例如分页功能）</li>\n<li>支持页面上的 API 请求测试</li>\n</ul>\n<p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vZnJlYWtjaGlja2VuL2RiLWFwaQ==\">DBApi: 零代码开发 api 服务，只需编写 sql，就可以生成 http api 服务。支持 api 动态创建，多数据源连接，动态添加数据源，兼容多种数据库。 适用于 BI 报表、数据可视化大屏的后端接口快速开发 (gitee.com)</span></p>\n<h2 id=\"开始安装\"><a class=\"anchor\" href=\"#开始安装\">#</a> 开始安装</h2>\n<h3 id=\"宝塔安装\"><a class=\"anchor\" href=\"#宝塔安装\">#</a> 宝塔安装</h3>\n<p>首先，登录你购买服务器厂商的控制台，我这里用的是腾讯云轻量应用服务器，系统选择的是 Centos7.6。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/a88b9f8c958f5.png\" alt=\"image-20220213100804144\" /></p>\n<p>找到你的服务器之后点击右上角的登录按钮（如果不喜欢这种方式登录可以选择自己喜欢的方式：putty，xshell，terminal 等等）当然如果选用其他方式记得先重置密码还在在购买的时候就创建密码，不然无法登录。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/f14f3bb534be1.png\" alt=\"image-20220213101412208\" /></p>\n<p>输入管理员指令：sudo -i</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/d7b4b43ac5543.png\" alt=\"image-20220213101617825\" /></p>\n<p>接下来输入命令安装宝塔</p>\n<pre><code class=\"language-yum\">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh\n</code></pre>\n<p>PS：如果没有宝塔账户先去注册一下，注册链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnQuY24vP2ludml0ZV9jb2RlPU1WOW9ibXBwZG1vPQ==\">https://www.bt.cn/?invite_code=MV9obmppdmo=</span></p>\n<p>安装成功后会看到下面的界面：</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/290f2465315a8.png\" alt=\"image-20220213102136068\" /></p>\n<p>接下来我们去防火墙开一下宝塔面板的 8888 端口：</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/153685d46daa0.png\" alt=\"image-20220213102422633\" /></p>\n<p>然后访问外网链接访问宝塔面板并输入账户密码登录，第一次登录会让你阅读协议并登录宝塔账户（就是刚才注册的）</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/40a4773713f1f.png\" alt=\"image-20220213102748975\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/4edc3701b0e22.png\" alt=\"image-20220213102811156\" /></p>\n<p>选择 LNMP 一键安装，PHP 版本可以选高一点。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/e80d3609d6936.png\" alt=\"image-20220213102935618\" /></p>\n<h3 id=\"环境二选一安装\"><a class=\"anchor\" href=\"#环境二选一安装\">#</a> 环境二选一安装</h3>\n<p>DBApi 提供了本地和 docker 的两种安装方式，每种方式下又有单机版和集群版，因为我这里目前仅有一台轻量应用服务器，所以不做集群版演示，如果各位能赞助我一下，我可能就会出集群版的教程了 [狗头]。</p>\n<h4 id=\"本地单机版教程\"><a class=\"anchor\" href=\"#本地单机版教程\">#</a> 本地单机版教程</h4>\n<ul>\n<li>依赖 java 环境，先自行在服务器安装 <code>jdk8+</code> ，并配置环境变量</li>\n</ul>\n<p>我们打开宝塔，点击网站，选 Java 项目，如未安装 jdk 会提示安装。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/413ad7b55aa83.png\" alt=\"image-20220416170440949\" /></p>\n<p>选择 8 版本点击安装。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/9e4b1680e1df3.png\" alt=\"image-20220416171249115\" /></p>\n<ul>\n<li>下载安装包解压到需要安装的目录<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vZnJlYWtjaGlja2VuL2RiLWFwaS5naXQ=\">下载链接</span></li>\n</ul>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/c6d91374ded74.png\" alt=\"image-20220416173842053\" /></p>\n<ul>\n<li>修改 <code>conf/application.properties</code>  文件中的以下配置</li>\n</ul>\n<pre><code># 失败告警邮件的发件人\n# email sender \nspring.mail.host=smtp.163.com\nspring.mail.username=xxx@163.com\nspring.mail.password=xxx\nspring.mail.default-encoding=UTF-8\n\n# 数据源密码加密存储的密钥，至少8位字符\n# key used to encrypt the password of DataSource, at least 8 char\ndbapi.secret.key=12345678\n\n# api访问路径的统一根路径，example: http://192.168.xx.xx:8520/api/xxx\n# api context\ndbapi.api.context=api\n\n# 如果不修改数据库地址将默认使用自带的内嵌元数据库sqlite\n# meta database address\nspring.datasource.driver-class-name=org.sqlite.JDBC\nspring.datasource.url=jdbc:sqlite::resource:sqlite.db\nspring.datasource.username=\nspring.datasource.password=\n</code></pre>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/05f6cf65e69e8.png\" alt=\"image-20220416175832055\" /></p>\n<ul>\n<li>如果配置了 mysql 作为元数据库，请先在 mysql 执行初始化脚本 <code>sql/ddl_mysql.sql</code></li>\n</ul>\n<p>我这里没有配置，一会会在服务端使用轻量应用数据库。</p>\n<ul>\n<li>Linux 一键启停</li>\n</ul>\n<pre><code>sh bin/dbapi-daemon.sh start standalone\nsh bin/dbapi-daemon.sh stop standalone\n</code></pre>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/1ba74bf75bd42.png\" alt=\"image-20220416180028217\" /></p>\n<ul>\n<li>如果是 windows 操作系统请右键点击 <code>bin/dbapi.ps1</code>  文件，选择使用 PowerShell 运行</li>\n</ul>\n<blockquote>\n<p>注意 windows 系统只支持 standalone 模式运行，不支持集群模式</p>\n</blockquote>\n<ul>\n<li>浏览器访问 <code>http://ip:8520</code>  进入 UI</li>\n</ul>\n<h4 id=\"docker单机版教程\"><a class=\"anchor\" href=\"#docker单机版教程\">#</a> docker 单机版教程</h4>\n<p>首先安装 docker</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/f61f488012c0e.png\" alt=\"image-20220416180549331\" /></p>\n<p>docker 部署相对简单，所以现在搭建基本都用 docker</p>\n<blockquote>\n<p>Docker 容器通过环境变量进行配置，附录 - 环境变量列出了  <code>DBApi</code>  的可配置环境变量及其默认值</p>\n</blockquote>\n<ul>\n<li>一键启动（使用 dbapi 自带的元数据库 sqlite）</li>\n</ul>\n<pre><code>docker run -it -p 8520:8520 --name dbapi freakchicken/db-api:3.1.0 standalone\n</code></pre>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/ad324bcaaf04a.png\" alt=\"image-20220416181630393\" /></p>\n<ul>\n<li>使用自己的 mysql 作为元数据库（启动前需要在 mysql 执行初始化脚本）</li>\n</ul>\n<p>我这里没有使用，一会会在服务端使用轻量应用数据库。</p>\n<pre><code>docker run -it \\\n-p 8520:8520 \\\n-e DB_URL=&quot;jdbc:mysql://192.168.xx.xx:3306/dbapi?useSSL=false&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8&quot; \\\n-e DB_USERNAME=&quot;root&quot; \\\n-e DB_PASSWORD=&quot;root&quot; \\\n-e DB_DRIVER=&quot;com.mysql.cj.jdbc.Driver&quot; \\\nfreakchicken/db-api:3.1.0 standalone\n</code></pre>\n<ul>\n<li>浏览器访问 <code>http://ip:8520</code>  进入 UI</li>\n</ul>\n<h3 id=\"界面预览和使用\"><a class=\"anchor\" href=\"#界面预览和使用\">#</a> 界面预览和使用</h3>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/4b56b820a22c4.png\" alt=\"image-20220416181759182\" /></p>\n<p>默认账号 / 密码：admin/admin</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/4a343add28c59.png\" alt=\"image-20220416181846020\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/b128731aa6dd5.png\" alt=\"image-20220416181909678\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/6faac4c3ae33a.png\" alt=\"image-20220416182110045\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/f34c9342e7978.png\" alt=\"image-20220416182308219\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/983d3085170d2.png\" alt=\"image-20220416182345049\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/bb73ac6f1e7f9.png\" alt=\"image-20220416182437911\" /></p>\n<h2 id=\"附录\"><a class=\"anchor\" href=\"#附录\">#</a> 附录</h2>\n<h3 id=\"环境变量\"><a class=\"anchor\" href=\"#环境变量\">#</a> 环境变量</h3>\n<blockquote>\n<p>Docker 部署的时候通过以下环境变量来传递参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MAIL_HOST</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3NtdHAuMTYzLmNvbQ==\">smtp.163.com</span></td>\n<td>失败告警的邮件发件人</td>\n</tr>\n<tr>\n<td>MAIL_USERNAME</td>\n<td><span class=\"exturl\" data-url=\"bWFpbHRvOmRiYXBpX3Rlc3RAMTYzLmNvbQ==\">dbapi_test@163.com</span></td>\n<td>失败告警的邮件发件人账户</td>\n</tr>\n<tr>\n<td>MAIL_PASSWORD</td>\n<td>WGJQBFRIPUENHMUP</td>\n<td>失败告警的邮件发件人密码</td>\n</tr>\n<tr>\n<td>SECRET_KEY</td>\n<td>12345678</td>\n<td>数据源密码加密存储的密钥，至少 8 位字符</td>\n</tr>\n<tr>\n<td>API_CONTEXT</td>\n<td>api</td>\n<td>所有 API 的统一根路径</td>\n</tr>\n<tr>\n<td>DB_URL</td>\n<td>jdbc:sqlite::resource:sqlite.db</td>\n<td>元数据库地址</td>\n</tr>\n<tr>\n<td>DB_USERNAME</td>\n<td></td>\n<td>元数据库账户</td>\n</tr>\n<tr>\n<td>DB_PASSWORD</td>\n<td></td>\n<td>元数据库密码</td>\n</tr>\n<tr>\n<td>DB_DRIVER</td>\n<td>org.sqlite.JDBC</td>\n<td>元数据库地址 jdbc 驱动</td>\n</tr>\n<tr>\n<td>NACOS_ADDRESS</td>\n<td>127.0.0.1:8848</td>\n<td>集群模式使用的 nacos 地址</td>\n</tr>\n<tr>\n<td>NACOS_USERNAME</td>\n<td>nacos</td>\n<td>集群模式使用的 nacos 账户</td>\n</tr>\n<tr>\n<td>NACOS_PASSWORD</td>\n<td>nacos</td>\n<td>集群模式使用的 nacos 密码</td>\n</tr>\n<tr>\n<td>NACOS_NAMESPACE</td>\n<td>public</td>\n<td>集群模式使用的 nacos namespace</td>\n</tr>\n</tbody>\n</table>\n","more":"<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>最近因业务需要创建可以对外查询的 API 来供其他人使用，但是本人纯小白一枚，不会写相关代码，非常苦恼。而且处于项目初期，没有太多的经费购买服务器，之前了解过服务器的购买流程，对我这种个人来说，真的是很贵了。直到我遇到了 LightHouse 和 LightDB：轻量应用服务器和轻量艺应用数据库。非常适合我这种小白个人开发者，不仅价格实惠，性能也不比服务器差，而且带宽也很高。所以本次教程就用 LightHouse 和 LightDB 来进行演示。</p>\n<h2 id=\"dbapi\"><a class=\"anchor\" href=\"#dbapi\">#</a> DBApi</h2>\n<h3 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<ul>\n<li>快速生成数据库的 http 接口服务，零代码开发，只需编写 sql，就可以生成 http api 服务。是数据库的上层应用，方便数据库数据对外发布 http 服务。</li>\n</ul>\n<h3 id=\"使用场景\"><a class=\"anchor\" href=\"#使用场景\">#</a> 使用场景</h3>\n<ul>\n<li>BI 报表、数据可视化大屏的后端接口快速开发；</li>\n<li>前端程序员快速开发后端接口进行接口联调；</li>\n<li>企业数据资产对外快速发布 http 服务及统一管理；</li>\n<li>企业数据接口的统一管理中心。</li>\n</ul>\n<h3 id=\"特点\"><a class=\"anchor\" href=\"#特点\">#</a> 特点</h3>\n<ul>\n<li>开箱即用，不需要编程，不需要依赖其他软件（只需要 java 运行环境）</li>\n<li>支持单机模式、集群模式；支持云原生容器化部署</li>\n<li>支持 API 级别的访问权限控制，支持 IP 白名单、黑名单控制</li>\n<li>支持所有类型数据库（JDBC 连接方式），包括 mysql/sqlserver/postgreSql/hive/oracle 等等</li>\n<li>支持动态 sql，类似 mybatis 的动态 sql，支持 sql 编辑、运行、调试</li>\n<li>支持 API 结果缓存，支持缓存开启 / 关闭（通过插件实现）</li>\n<li>支持自定义代码逻辑的数据转换，比如数据脱敏（通过插件实现）</li>\n<li>支持 API 配置导入导出，方便测试环境到生产环境的 API 迁移</li>\n<li>支持一个接口内多条 SQL 执行（例如分页功能）</li>\n<li>支持页面上的 API 请求测试</li>\n</ul>\n<p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vZnJlYWtjaGlja2VuL2RiLWFwaQ==\">DBApi: 零代码开发 api 服务，只需编写 sql，就可以生成 http api 服务。支持 api 动态创建，多数据源连接，动态添加数据源，兼容多种数据库。 适用于 BI 报表、数据可视化大屏的后端接口快速开发 (gitee.com)</span></p>\n<h2 id=\"开始安装\"><a class=\"anchor\" href=\"#开始安装\">#</a> 开始安装</h2>\n<h3 id=\"宝塔安装\"><a class=\"anchor\" href=\"#宝塔安装\">#</a> 宝塔安装</h3>\n<p>首先，登录你购买服务器厂商的控制台，我这里用的是腾讯云轻量应用服务器，系统选择的是 Centos7.6。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/a88b9f8c958f5.png\" alt=\"image-20220213100804144\" /></p>\n<p>找到你的服务器之后点击右上角的登录按钮（如果不喜欢这种方式登录可以选择自己喜欢的方式：putty，xshell，terminal 等等）当然如果选用其他方式记得先重置密码还在在购买的时候就创建密码，不然无法登录。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/f14f3bb534be1.png\" alt=\"image-20220213101412208\" /></p>\n<p>输入管理员指令：sudo -i</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/d7b4b43ac5543.png\" alt=\"image-20220213101617825\" /></p>\n<p>接下来输入命令安装宝塔</p>\n<pre><code class=\"language-yum\">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh\n</code></pre>\n<p>PS：如果没有宝塔账户先去注册一下，注册链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnQuY24vP2ludml0ZV9jb2RlPU1WOW9ibXBwZG1vPQ==\">https://www.bt.cn/?invite_code=MV9obmppdmo=</span></p>\n<p>安装成功后会看到下面的界面：</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/290f2465315a8.png\" alt=\"image-20220213102136068\" /></p>\n<p>接下来我们去防火墙开一下宝塔面板的 8888 端口：</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/153685d46daa0.png\" alt=\"image-20220213102422633\" /></p>\n<p>然后访问外网链接访问宝塔面板并输入账户密码登录，第一次登录会让你阅读协议并登录宝塔账户（就是刚才注册的）</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/40a4773713f1f.png\" alt=\"image-20220213102748975\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/4edc3701b0e22.png\" alt=\"image-20220213102811156\" /></p>\n<p>选择 LNMP 一键安装，PHP 版本可以选高一点。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/e80d3609d6936.png\" alt=\"image-20220213102935618\" /></p>\n<h3 id=\"环境二选一安装\"><a class=\"anchor\" href=\"#环境二选一安装\">#</a> 环境二选一安装</h3>\n<p>DBApi 提供了本地和 docker 的两种安装方式，每种方式下又有单机版和集群版，因为我这里目前仅有一台轻量应用服务器，所以不做集群版演示，如果各位能赞助我一下，我可能就会出集群版的教程了 [狗头]。</p>\n<h4 id=\"本地单机版教程\"><a class=\"anchor\" href=\"#本地单机版教程\">#</a> 本地单机版教程</h4>\n<ul>\n<li>依赖 java 环境，先自行在服务器安装 <code>jdk8+</code> ，并配置环境变量</li>\n</ul>\n<p>我们打开宝塔，点击网站，选 Java 项目，如未安装 jdk 会提示安装。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/413ad7b55aa83.png\" alt=\"image-20220416170440949\" /></p>\n<p>选择 8 版本点击安装。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/9e4b1680e1df3.png\" alt=\"image-20220416171249115\" /></p>\n<ul>\n<li>下载安装包解压到需要安装的目录<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vZnJlYWtjaGlja2VuL2RiLWFwaS5naXQ=\">下载链接</span></li>\n</ul>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/c6d91374ded74.png\" alt=\"image-20220416173842053\" /></p>\n<ul>\n<li>修改 <code>conf/application.properties</code>  文件中的以下配置</li>\n</ul>\n<pre><code># 失败告警邮件的发件人\n# email sender \nspring.mail.host=smtp.163.com\nspring.mail.username=xxx@163.com\nspring.mail.password=xxx\nspring.mail.default-encoding=UTF-8\n\n# 数据源密码加密存储的密钥，至少8位字符\n# key used to encrypt the password of DataSource, at least 8 char\ndbapi.secret.key=12345678\n\n# api访问路径的统一根路径，example: http://192.168.xx.xx:8520/api/xxx\n# api context\ndbapi.api.context=api\n\n# 如果不修改数据库地址将默认使用自带的内嵌元数据库sqlite\n# meta database address\nspring.datasource.driver-class-name=org.sqlite.JDBC\nspring.datasource.url=jdbc:sqlite::resource:sqlite.db\nspring.datasource.username=\nspring.datasource.password=\n</code></pre>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/05f6cf65e69e8.png\" alt=\"image-20220416175832055\" /></p>\n<ul>\n<li>如果配置了 mysql 作为元数据库，请先在 mysql 执行初始化脚本 <code>sql/ddl_mysql.sql</code></li>\n</ul>\n<p>我这里没有配置，一会会在服务端使用轻量应用数据库。</p>\n<ul>\n<li>Linux 一键启停</li>\n</ul>\n<pre><code>sh bin/dbapi-daemon.sh start standalone\nsh bin/dbapi-daemon.sh stop standalone\n</code></pre>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/1ba74bf75bd42.png\" alt=\"image-20220416180028217\" /></p>\n<ul>\n<li>如果是 windows 操作系统请右键点击 <code>bin/dbapi.ps1</code>  文件，选择使用 PowerShell 运行</li>\n</ul>\n<blockquote>\n<p>注意 windows 系统只支持 standalone 模式运行，不支持集群模式</p>\n</blockquote>\n<ul>\n<li>浏览器访问 <code>http://ip:8520</code>  进入 UI</li>\n</ul>\n<h4 id=\"docker单机版教程\"><a class=\"anchor\" href=\"#docker单机版教程\">#</a> docker 单机版教程</h4>\n<p>首先安装 docker</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/f61f488012c0e.png\" alt=\"image-20220416180549331\" /></p>\n<p>docker 部署相对简单，所以现在搭建基本都用 docker</p>\n<blockquote>\n<p>Docker 容器通过环境变量进行配置，附录 - 环境变量列出了  <code>DBApi</code>  的可配置环境变量及其默认值</p>\n</blockquote>\n<ul>\n<li>一键启动（使用 dbapi 自带的元数据库 sqlite）</li>\n</ul>\n<pre><code>docker run -it -p 8520:8520 --name dbapi freakchicken/db-api:3.1.0 standalone\n</code></pre>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/ad324bcaaf04a.png\" alt=\"image-20220416181630393\" /></p>\n<ul>\n<li>使用自己的 mysql 作为元数据库（启动前需要在 mysql 执行初始化脚本）</li>\n</ul>\n<p>我这里没有使用，一会会在服务端使用轻量应用数据库。</p>\n<pre><code>docker run -it \\\n-p 8520:8520 \\\n-e DB_URL=&quot;jdbc:mysql://192.168.xx.xx:3306/dbapi?useSSL=false&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8&quot; \\\n-e DB_USERNAME=&quot;root&quot; \\\n-e DB_PASSWORD=&quot;root&quot; \\\n-e DB_DRIVER=&quot;com.mysql.cj.jdbc.Driver&quot; \\\nfreakchicken/db-api:3.1.0 standalone\n</code></pre>\n<ul>\n<li>浏览器访问 <code>http://ip:8520</code>  进入 UI</li>\n</ul>\n<h3 id=\"界面预览和使用\"><a class=\"anchor\" href=\"#界面预览和使用\">#</a> 界面预览和使用</h3>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/4b56b820a22c4.png\" alt=\"image-20220416181759182\" /></p>\n<p>默认账号 / 密码：admin/admin</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/4a343add28c59.png\" alt=\"image-20220416181846020\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/b128731aa6dd5.png\" alt=\"image-20220416181909678\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/6faac4c3ae33a.png\" alt=\"image-20220416182110045\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/f34c9342e7978.png\" alt=\"image-20220416182308219\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/983d3085170d2.png\" alt=\"image-20220416182345049\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/16/bb73ac6f1e7f9.png\" alt=\"image-20220416182437911\" /></p>\n<h2 id=\"附录\"><a class=\"anchor\" href=\"#附录\">#</a> 附录</h2>\n<h3 id=\"环境变量\"><a class=\"anchor\" href=\"#环境变量\">#</a> 环境变量</h3>\n<blockquote>\n<p>Docker 部署的时候通过以下环境变量来传递参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MAIL_HOST</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3NtdHAuMTYzLmNvbQ==\">smtp.163.com</span></td>\n<td>失败告警的邮件发件人</td>\n</tr>\n<tr>\n<td>MAIL_USERNAME</td>\n<td><span class=\"exturl\" data-url=\"bWFpbHRvOmRiYXBpX3Rlc3RAMTYzLmNvbQ==\">dbapi_test@163.com</span></td>\n<td>失败告警的邮件发件人账户</td>\n</tr>\n<tr>\n<td>MAIL_PASSWORD</td>\n<td>WGJQBFRIPUENHMUP</td>\n<td>失败告警的邮件发件人密码</td>\n</tr>\n<tr>\n<td>SECRET_KEY</td>\n<td>12345678</td>\n<td>数据源密码加密存储的密钥，至少 8 位字符</td>\n</tr>\n<tr>\n<td>API_CONTEXT</td>\n<td>api</td>\n<td>所有 API 的统一根路径</td>\n</tr>\n<tr>\n<td>DB_URL</td>\n<td>jdbc:sqlite::resource:sqlite.db</td>\n<td>元数据库地址</td>\n</tr>\n<tr>\n<td>DB_USERNAME</td>\n<td></td>\n<td>元数据库账户</td>\n</tr>\n<tr>\n<td>DB_PASSWORD</td>\n<td></td>\n<td>元数据库密码</td>\n</tr>\n<tr>\n<td>DB_DRIVER</td>\n<td>org.sqlite.JDBC</td>\n<td>元数据库地址 jdbc 驱动</td>\n</tr>\n<tr>\n<td>NACOS_ADDRESS</td>\n<td>127.0.0.1:8848</td>\n<td>集群模式使用的 nacos 地址</td>\n</tr>\n<tr>\n<td>NACOS_USERNAME</td>\n<td>nacos</td>\n<td>集群模式使用的 nacos 账户</td>\n</tr>\n<tr>\n<td>NACOS_PASSWORD</td>\n<td>nacos</td>\n<td>集群模式使用的 nacos 密码</td>\n</tr>\n<tr>\n<td>NACOS_NAMESPACE</td>\n<td>public</td>\n<td>集群模式使用的 nacos namespace</td>\n</tr>\n</tbody>\n</table>\n","categories":[],"tags":[]}