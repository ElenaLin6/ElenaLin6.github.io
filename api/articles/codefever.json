{"title":"Code Fever 做专属于自己的开源Git代码托管服务","slug":"codefever","date":"2022-04-30T08:05:19.169Z","updated":"2022-05-01T00:45:35.423Z","comments":true,"path":"api/articles/codefever.json","excerpt":null,"covers":["https://ics.iczkj.com/pic/2022/04/18/752242921bca3.png","https://ics.iczkj.com/pic/2022/04/18/aaf71720f1d27.png","https://ics.iczkj.com/pic/2022/04/18/e1c8917803ecd.png","https://ics.iczkj.com/pic/2022/04/18/aaf71720f1d27.png","https://ics.iczkj.com/pic/2022/04/18/aeea87c075d3b.png","https://ics.iczkj.com/pic/2022/04/18/45e0f2405079b.png","https://ics.iczkj.com/pic/2022/04/18/549e79a172487.png"],"content":"<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>最近因为学校项目的一些关系，在频繁的写和更改代码，代码这种重要的东西，自然是需要多多备份的，一但丢失，就再也找不回来了。所以一开始选用程序员们都知道的 GitHub 和 Gitee 做为备份仓库。</p>\n<p>不过使用一段时间后问题就来了，GitHub 的上传和拉取速度实在感人，对于我这种急性子的人来说，实在是难以忍受。而无论是 GitHub 还是 Gitee 呢，都不能无限制私人仓库，这就让人非常苦恼。毕竟自己要毕业的项目暂时不能随随便便公开，而且最重要的是分支比较多，这样我就需要多个仓库来存放代码，目前因此事已经苦恼多日。</p>\n<p>偶然听别人说可以自己搭建代码托管平台，于是打算动手实践。在网上浏览了一圈服务器之后发现真的好贵，而且环境的配置也非常困难。我在交流群里面询问小伙伴们有没有更好方案时，有一个小伙伴向我推荐轻量应用服务器，我随后便去了解了一下这个叫做轻量应用服务器的产品，发现他不仅环境配置简单，在安装系统时就有各式各样已经打包好的环境供用户选择，而且价格也是相当的亲民，于是当机立断开了一台来部署私有代码托管平台。</p>\n<p>我选的这个开源 Git 代码托管服务平台是 Code Fever，我也考虑过比较有名的 GitLab，但是他太吃内存了，我消费不起啊，而且对于我这种只想备份代码的个人来说，其实 Code Fever 就足够了。那么话不多说，让我们开始今天的教程吧～</p>\n<h2 id=\"code-fever\"><a class=\"anchor\" href=\"#code-fever\">#</a> Code Fever</h2>\n<h3 id=\"功能特性\"><a class=\"anchor\" href=\"#功能特性\">#</a> 功能特性</h3>\n<ul>\n<li>🆓 <strong>永久免费:</strong> 永久免费提供给大家使用，您无需担心付费</li>\n<li>❤️ <strong>完整开源:</strong> 毫无保留的完整开源，无任何编译或加密代码</li>\n<li>🥬 <strong>轻量安装:</strong> 极简设计风格，排除重度冗余的多余功能</li>\n<li>⚡️ <strong>性能高效:</strong> 速度极快，对服务器资源要求极低，1 核 CPU/1G 内存即可运行</li>\n<li>♾️ <strong>无限仓库:</strong> 没有任何仓库数量、使用数量的限制</li>\n<li>⌨️ <strong>代码对比:</strong> 支持提交代码的不同版本支持高亮显示对比</li>\n<li>🛤️ <strong>分支管理:</strong> 完整支持 Git 原生分支和 Tag，帮助更清晰的管理代码</li>\n<li>🙋‍♂️ <strong>合并请求（Merge Request）:</strong> 支持多人协作，让代码版本控制更顺畅</li>\n<li>🙅🏻‍♀️ <strong>分支保护:</strong> 分支保护功能让代码提交安全可控，代码 Review 更容易清晰</li>\n<li>👥 <strong>多人协作:</strong> 支持多人团队协作，并可以设置每个成员的角色和权限</li>\n<li>🔌 <strong>Webhook:</strong> 支持 Webhook 功能，可轻松和其他系统进行集成</li>\n<li>🖥️ <strong>管理后台:</strong> 支持超级管理员后台，可以让团队 leader 管理所有项目和用户信息</li>\n<li>💬 <strong>中英双语:</strong> 原生支持中文和英文两种语言</li>\n</ul>\n<h3 id=\"安装方法\"><a class=\"anchor\" href=\"#安装方法\">#</a> 安装方法</h3>\n<p><code>CodeFever</code>  提供  <code>从零开始安装</code>  和  <code>Docker 镜像安装</code>  两种安装方式，可以根据自己的实际需要选择安装方式。</p>\n<h4 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h4>\n<p>0.<strong> 轻量应用服务器的选购</strong></p>\n<p>孟买现在半价特惠，大家如果想购买可以点击文末或者评论区链接。这里建议小白使用宝塔镜像，如果使用 centos 镜像可以看宝塔搭建教程。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/752242921bca3.png\" alt=\"image-20220418174616345\" /></p>\n<p>1.<strong> 宝塔搭建</strong></p>\n<p><mark>此处插入宝塔搭建教程</mark></p>\n<h4 id=\"docker-镜像安装\"><a class=\"anchor\" href=\"#docker-镜像安装\">#</a> Docker 镜像安装</h4>\n<p><strong>Docker 镜像说明</strong></p>\n<p><code>CodeFever Community 版本</code>  的  <code>Docker 镜像</code>  是从  <code>dockerhub</code>  上的  <code>centos:centos7.9.2009</code>  镜像开始按照 从零开始安装中的步骤进行构建，构建架构是  <code>x86_64 (amd64)</code>  如果有其他需求请自行构建镜像。</p>\n<p><strong>拉取镜像并启动</strong></p>\n<p>启动  <code>CodeFever Communiy 版本</code>  的  <code>Docker 镜像</code></p>\n<p>先登录宝塔面板的终端，输入下面的拉取镜像命令。</p>\n<pre><code>docker run -d --privileged=true --name codefever -p 80:80 -p 22:22 -it pgyer/codefever-community:latest /usr/sbin/init\n</code></pre>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/aaf71720f1d27.png\" alt=\"image-20220418184608016\" /></p>\n<ol>\n<li>服务启动后尝试访问  <code>http://127.0.0.1</code>  或  <code>http://&lt;server ip&gt;</code>  登录</li>\n<li>如果你希望使用  <code>22</code>  端口作为  <code>Git</code>  的  <code>SSH 协议</code> 端口，你需要在启动镜像前将宿主系统的  <code>SSH 服务</code>   <code>端口</code>  先修改成其他端口</li>\n<li>如果服务异常你可以登录 Shell 去人工维护，也可以直接重启容器重启服务。</li>\n<li>默认管理员用户:  <code>root@codefever.cn</code> , 密码:  <code>123456</code> 。登录后请修改密码并绑定 MFA 设备。</li>\n</ol>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/e1c8917803ecd.png\" alt=\"image-20220418184701577\" /></p>\n<h4 id=\"从零开始安装\"><a class=\"anchor\" href=\"#从零开始安装\">#</a> 从零开始安装</h4>\n<ol start=\"0\">\n<li><strong>安装前的说明</strong></li>\n</ol>\n<p>此安装步骤是  <code>从头开始安装</code>  步骤，举例的脚本适用于大部分  <code>Linux</code>  操作系统。</p>\n<p>本文以  <code>CentOS 7.6 Linux</code>  操作系统为例，不同操作系统可能会有不同差别，需要用户自行对应到相应操作。</p>\n<p>整个安装过程需要使用  <code>root</code>  操作系统用户来完成。</p>\n<blockquote>\n<p><code>步骤1</code>  -  <code>步骤8</code>  均为软件环境安装步骤。如果你的操作已经具备当前步骤的软件或环境，此步骤可以跳过。</p>\n</blockquote>\n<p>PS：小白推荐使用宝塔安装环境，可以略过下面环境安装，不愿意使用宝塔可以按下面步骤搭建环境。</p>\n<ol>\n<li>准备操作系统环境</li>\n</ol>\n<p>选择合适的  <code>Linux</code>  发行版本，推荐使用  <code>CentOS 7.x</code> 。</p>\n<ul>\n<li>执行编译安装时需要保证机器至少有  <code>1800 MB</code>  内存，如果内存不足  <code>1800 MB</code>  请临时添加交换分区使可用内存到达  <code>1800 MB</code> 。</li>\n</ul>\n<pre><code># 临时增加 1000 MB Swap 空间\ndd if=/dev/zero of=/root/swap bs=1024 count=1000000\nmkswap /root/swap\nswapon /root/swap\n</code></pre>\n<p>为了顺利的设置必要的软件环境，以下的软件包必须安装到系统上。</p>\n<pre><code># 安装基础软件包\nyum install -y sudo tcl tk gettext autoconf gcc cmake3 wget initscripts openssh-server crontabs mailx sendmail pcre pcre-devel libcurl libcurl-devel libxml2 libxml2-devel openssl openssl-devel sqlite sqlite-devel libpng libpng-devel libwebp libwebp-devel libjpeg libjpeg-devel libXpm libXpm-devel freetype freetype-devel oniguruma oniguruma-devel libyaml libyaml-devel\n</code></pre>\n<p>除此之外，你还需要安装  <code>libzip 1.7+</code>  库，需要去官网下载源码包解压后安装。</p>\n<p>下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9saWJ6aXAub3JnL2Rvd25sb2FkLw==\">https://libzip.org/download/</span></p>\n<pre><code># 编译安装 libzip\ncd libzip-1.x.x\nmkdir build\ncd build\ncmake3 ../\nmake &amp;&amp; make install\nexport PKG_CONFIG_PATH=&quot;/usr/local/lib64/pkgconfig/:/usr/local/lib/pkgconfig/&quot;\n</code></pre>\n<ol start=\"2\">\n<li>安装 nginx</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cDovL25naW54Lm9yZy9lbi9kb3dubG9hZC5odG1s\">http://nginx.org/en/download.html</span> 下载  <code>Nginx</code>  源码解压后编译并安装安装到  <code>/usr/local/nginx</code>  目录下:</p>\n<pre><code># 安装 nginx 到 /usr/local/nginx 目录\ncd nginx-1.x.x\n./configure --prefix=/usr/local/nginx\nmake &amp;&amp; make install\n</code></pre>\n<ol start=\"3\">\n<li>安装 PHP</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGhwLm5ldC9kb3dubG9hZHM=\">https://www.php.net/downloads</span> 下载  <code>PHP</code>  源码 (推荐  <code>7.4</code>  版本)，解压后编译并安装到  <code>/usr/local/php</code>  目录下</p>\n<blockquote>\n<p>配置检查过程可能会提示缺少某些软件包，需要根据配置检查过程提示自行安装后再重复配置检查过程</p>\n</blockquote>\n<pre><code># 安装 php 到 /usr/local/php 目录\ncd php-7.4.x\n./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-fpm --enable-bcmath=shared --with-pdo_sqlite --with-gettext=shared --with-iconv --enable-ftp=shared --with-sqlite3 --enable-mbstring=shared --enable-sockets=shared --enable-soap=shared --with-openssl --with-zlib --with-curl=shared --enable-gd --with-freetype --with-jpeg --with-xpm --with-webp --with-mhash --enable-opcache --with-mysqli --without-pear --with-libdir=lib64 --with-zip --enable-mbstring --enable-pcntl\nmake &amp;&amp; make install\n</code></pre>\n<blockquote>\n<p><code>Codefever</code>  还需要以下  <code>PHP 扩展</code>  才能良好工作，按照下面地址下载并安装</p>\n</blockquote>\n<ul>\n<li>yaml : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZWNsLnBocC5uZXQvcGFja2FnZS95YW1s\">https://pecl.php.net/package/yaml</span></li>\n</ul>\n<pre><code># 安装 php yaml 扩展\ncd yaml-2.x.x\n/usr/local/php/bin/phpize\n./configure --with-php-config=/usr/local/php/bin/php-config\nmake &amp;&amp; make install\n</code></pre>\n<ol start=\"4\">\n<li>安装 Git</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLmVkZ2Uua2VybmVsLm9yZy9wdWIvc29mdHdhcmUvc2NtL2dpdC8=\">https://mirrors.edge.kernel.org/pub/software/scm/git/</span> 下载  <code>Git v2</code>  的源码，解压后编译并安装到  <code>/usr/local/git</code>  目录下</p>\n<pre><code># 安装 git v2 到 /usr/local/git 目录下\ncd git-2.x.x\n./configure --prefix=/usr/local/git\nmake &amp;&amp; make install\n</code></pre>\n<p>连接可执行二进制文件到  <code>/usr/local/bin</code>  目录下</p>\n<pre><code># 链接可执行文件\nln -s /usr/local/git/bin/git /usr/local/bin/\n</code></pre>\n<ol start=\"5\">\n<li>安装 Go (无需编译，二进制安装)</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb2xhbmcuZ29vZ2xlLmNuL2RsLw==\">https://golang.google.cn/dl/</span> 下载 1.16 版本以上的二进制安装包解压后复制到  <code>/usr/local/go</code>  目录下</p>\n<pre><code># 复制到 /usr/local\t目录下\ncp -R go /usr/local\n</code></pre>\n<p>连接可执行二进制文件到  <code>/usr/local/bin</code>  目录下</p>\n<pre><code># 链接可执行文件\nln -s /usr/local/go/bin/go /usr/local/bin/go\nln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt\n</code></pre>\n<ol start=\"6\">\n<li>安装 NodeJS (无需编译，二进制安装，开发或修改前端页面时使用)</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==\">https://nodejs.org/en/download/</span> 下载  <code>16.10</code>  以上  <code>LTS</code>  版本二进制安装包解压后复制到  <code>/usr/local/node</code>  目录下</p>\n<pre><code># 复制到 /usr/local\t目录下\ncp -R node-v16.x.x-os-arch /usr/local/node\n</code></pre>\n<p>连接可执行二进制文件到  <code>/usr/local/bin/</code>  目录下</p>\n<pre><code># 链接可执行文件\nln -s /usr/local/node/bin/node /usr/local/bin/node\nln -s /usr/local/node/bin/npm /usr/local/bin/npm\nln -s /usr/local/node/bin/npx /usr/local/bin/npx\nln -s /usr/local/node/bin/corepack /usr/local/bin/corepack\n</code></pre>\n<ol start=\"7\">\n<li>安装 Yarn</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly95YXJucGtnLmNvbS9nZXR0aW5nLXN0YXJ0ZWQvaW5zdGFsbA==\">https://yarnpkg.com/getting-started/install</span> 按照页面指导安装  <code>Yarn</code></p>\n<pre><code># NodeJS v16.10 以上打开 corepack 即可使用 Yarn\ncorepack enable\n</code></pre>\n<ol start=\"8\">\n<li>安装 MySQL/MariaDB (无需编译，镜像源安装)</li>\n</ol>\n<p>MySQL 不需要单独安装，直接使用系统自带软件工具安装软件包即可。需要安装于  <code>MySQL 5.7</code>  以上的相当版本。</p>\n<p>去官网按照指导使用镜像源安装二进制版本 (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpYWRiLm9yZy9kb3dubG9hZC8/dD1yZXBvLWNvbmZpZw==\">https://mariadb.org/download/?t=repo-config</span> 选择  <code>xTom GmbH - San Jose</code>  镜像)，如果你使用使用云数据库，你可以跳过此步骤。</p>\n<p>运行  <code>service mariadb start</code>  或  <code>service mysql start</code>  启动服务后使用  <code>mysql_secure_installation</code>  或  <code>mariadb-secure-installation</code>  初始化数据库</p>\n<p>* 当设置  <code>root</code>  密码为  <code>123456</code>  时，不需要在下一步中修改  <code>env.yaml</code>  中的数据库设置。</p>\n<p>如果你使用  <code>MySQL 5.7</code>  版本数据，需要修改  <code>SQL MODE</code>  变量，否则创建数据库时会报错，如果使用  <code>MariaDB</code>  可以忽略此选项。</p>\n<pre><code>set global sql_mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';\n</code></pre>\n<ol start=\"9\">\n<li>下载源码并安装</li>\n</ol>\n<p>去  <code>Github</code>  上下载源码并安装  <code>/data/www/codefever-comminuty</code>  目录下</p>\n<pre><code>mkdir -p /data/www\ncd /data/www\ngit clone https://github.com/PGYER/codefever.git codefever-community\ncd codefever-community\n</code></pre>\n<ul>\n<li>如果  <code>Github</code>  的  <code>HTTP</code>  服务访问速度较慢，可以尝试使用  <code>SSH</code>  服务（需要提前设置  <code>SSH Key</code> ）</li>\n</ul>\n<pre><code>git clone ssh://git@github.com:PGYER/codefever.git codefever-community\n</code></pre>\n<p>编译  <code>HTTP</code>  网关服务</p>\n<pre><code>cd /data/www/codefever-community/http-gateway\nexport GO111MODULE=off\nexport GOPROXY=https://mirrors.aliyun.com/goproxy\ngo get gopkg.in/yaml.v2\ngo build main.go\n</code></pre>\n<p>编译  <code>SSH</code>  网关服务</p>\n<pre><code>cd /data/www/codefever-community/ssh-gateway/shell\nexport GO111MODULE=off\nexport GOPROXY=https://mirrors.aliyun.com/goproxy\ngo get gopkg.in/yaml.v2\ngo build main.go\n</code></pre>\n<p>执行安装脚本</p>\n<pre><code>cd /data/www/codefever-community/misc\nsh ./install.sh\n</code></pre>\n<p>按照  <code>install.sh</code>  运行后提示修改  <code>env.yaml</code>  文件设置参数</p>\n<p>运行数据库迁移脚本</p>\n<pre><code>cd /data/www/codefever-community/misc\nsh ./create_db.sh\n</code></pre>\n<p>如果你不需要对 Code Fever 进行代码上的修改，或者将来不计划运行单元测试，可以删除测试数据</p>\n<pre><code>cd /data/www/codefever-community/misc\nsh ./remove_test_data.sh\n</code></pre>\n<p>为服务开启  <code>chkconfig</code>  以开机自动运行</p>\n<pre><code>chkconfig mariadb on # 或 chkconfig mysql on (根据安装的数据库类型, 如果使用云服务忽略此项目)\nchkconfig sendmail on\nchkconfig nginx on\nchkconfig php-fpm on\nchkconfig codefever on\nchkconfig crond on\n</code></pre>\n<p>尝试访问  <code>http://127.0.0.1</code>  或  <code>http://&lt;server ip&gt;</code>  来登录</p>\n<p>默认管理员用户:  <code>root@codefever.cn</code> , 密码:  <code>123456</code> 。登录后请修改密码并绑定 MFA 设备。</p>\n<h3 id=\"界面预览\"><a class=\"anchor\" href=\"#界面预览\">#</a> 界面预览</h3>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/aaf71720f1d27.png\" alt=\"image-20220418184608016\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/aeea87c075d3b.png\" alt=\"image-20220418184842684\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/45e0f2405079b.png\" alt=\"image-20220418184908216\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/549e79a172487.png\" alt=\"image-20220418184931591\" /></p>\n<h3 id=\"写在最后\"><a class=\"anchor\" href=\"#写在最后\">#</a> 写在最后</h3>\n<p>其实这款平台非常好用，非常轻量，适合个人使用，美中不足的是不能从其他平台仓库直接克隆项目到本地服务端，只能通过自己手动上传，希望作者以后能增加这个功能。</p>\n","more":"<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>最近因为学校项目的一些关系，在频繁的写和更改代码，代码这种重要的东西，自然是需要多多备份的，一但丢失，就再也找不回来了。所以一开始选用程序员们都知道的 GitHub 和 Gitee 做为备份仓库。</p>\n<p>不过使用一段时间后问题就来了，GitHub 的上传和拉取速度实在感人，对于我这种急性子的人来说，实在是难以忍受。而无论是 GitHub 还是 Gitee 呢，都不能无限制私人仓库，这就让人非常苦恼。毕竟自己要毕业的项目暂时不能随随便便公开，而且最重要的是分支比较多，这样我就需要多个仓库来存放代码，目前因此事已经苦恼多日。</p>\n<p>偶然听别人说可以自己搭建代码托管平台，于是打算动手实践。在网上浏览了一圈服务器之后发现真的好贵，而且环境的配置也非常困难。我在交流群里面询问小伙伴们有没有更好方案时，有一个小伙伴向我推荐轻量应用服务器，我随后便去了解了一下这个叫做轻量应用服务器的产品，发现他不仅环境配置简单，在安装系统时就有各式各样已经打包好的环境供用户选择，而且价格也是相当的亲民，于是当机立断开了一台来部署私有代码托管平台。</p>\n<p>我选的这个开源 Git 代码托管服务平台是 Code Fever，我也考虑过比较有名的 GitLab，但是他太吃内存了，我消费不起啊，而且对于我这种只想备份代码的个人来说，其实 Code Fever 就足够了。那么话不多说，让我们开始今天的教程吧～</p>\n<h2 id=\"code-fever\"><a class=\"anchor\" href=\"#code-fever\">#</a> Code Fever</h2>\n<h3 id=\"功能特性\"><a class=\"anchor\" href=\"#功能特性\">#</a> 功能特性</h3>\n<ul>\n<li>🆓 <strong>永久免费:</strong> 永久免费提供给大家使用，您无需担心付费</li>\n<li>❤️ <strong>完整开源:</strong> 毫无保留的完整开源，无任何编译或加密代码</li>\n<li>🥬 <strong>轻量安装:</strong> 极简设计风格，排除重度冗余的多余功能</li>\n<li>⚡️ <strong>性能高效:</strong> 速度极快，对服务器资源要求极低，1 核 CPU/1G 内存即可运行</li>\n<li>♾️ <strong>无限仓库:</strong> 没有任何仓库数量、使用数量的限制</li>\n<li>⌨️ <strong>代码对比:</strong> 支持提交代码的不同版本支持高亮显示对比</li>\n<li>🛤️ <strong>分支管理:</strong> 完整支持 Git 原生分支和 Tag，帮助更清晰的管理代码</li>\n<li>🙋‍♂️ <strong>合并请求（Merge Request）:</strong> 支持多人协作，让代码版本控制更顺畅</li>\n<li>🙅🏻‍♀️ <strong>分支保护:</strong> 分支保护功能让代码提交安全可控，代码 Review 更容易清晰</li>\n<li>👥 <strong>多人协作:</strong> 支持多人团队协作，并可以设置每个成员的角色和权限</li>\n<li>🔌 <strong>Webhook:</strong> 支持 Webhook 功能，可轻松和其他系统进行集成</li>\n<li>🖥️ <strong>管理后台:</strong> 支持超级管理员后台，可以让团队 leader 管理所有项目和用户信息</li>\n<li>💬 <strong>中英双语:</strong> 原生支持中文和英文两种语言</li>\n</ul>\n<h3 id=\"安装方法\"><a class=\"anchor\" href=\"#安装方法\">#</a> 安装方法</h3>\n<p><code>CodeFever</code>  提供  <code>从零开始安装</code>  和  <code>Docker 镜像安装</code>  两种安装方式，可以根据自己的实际需要选择安装方式。</p>\n<h4 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h4>\n<p>0.<strong> 轻量应用服务器的选购</strong></p>\n<p>孟买现在半价特惠，大家如果想购买可以点击文末或者评论区链接。这里建议小白使用宝塔镜像，如果使用 centos 镜像可以看宝塔搭建教程。</p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/752242921bca3.png\" alt=\"image-20220418174616345\" /></p>\n<p>1.<strong> 宝塔搭建</strong></p>\n<p><mark>此处插入宝塔搭建教程</mark></p>\n<h4 id=\"docker-镜像安装\"><a class=\"anchor\" href=\"#docker-镜像安装\">#</a> Docker 镜像安装</h4>\n<p><strong>Docker 镜像说明</strong></p>\n<p><code>CodeFever Community 版本</code>  的  <code>Docker 镜像</code>  是从  <code>dockerhub</code>  上的  <code>centos:centos7.9.2009</code>  镜像开始按照 从零开始安装中的步骤进行构建，构建架构是  <code>x86_64 (amd64)</code>  如果有其他需求请自行构建镜像。</p>\n<p><strong>拉取镜像并启动</strong></p>\n<p>启动  <code>CodeFever Communiy 版本</code>  的  <code>Docker 镜像</code></p>\n<p>先登录宝塔面板的终端，输入下面的拉取镜像命令。</p>\n<pre><code>docker run -d --privileged=true --name codefever -p 80:80 -p 22:22 -it pgyer/codefever-community:latest /usr/sbin/init\n</code></pre>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/aaf71720f1d27.png\" alt=\"image-20220418184608016\" /></p>\n<ol>\n<li>服务启动后尝试访问  <code>http://127.0.0.1</code>  或  <code>http://&lt;server ip&gt;</code>  登录</li>\n<li>如果你希望使用  <code>22</code>  端口作为  <code>Git</code>  的  <code>SSH 协议</code> 端口，你需要在启动镜像前将宿主系统的  <code>SSH 服务</code>   <code>端口</code>  先修改成其他端口</li>\n<li>如果服务异常你可以登录 Shell 去人工维护，也可以直接重启容器重启服务。</li>\n<li>默认管理员用户:  <code>root@codefever.cn</code> , 密码:  <code>123456</code> 。登录后请修改密码并绑定 MFA 设备。</li>\n</ol>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/e1c8917803ecd.png\" alt=\"image-20220418184701577\" /></p>\n<h4 id=\"从零开始安装\"><a class=\"anchor\" href=\"#从零开始安装\">#</a> 从零开始安装</h4>\n<ol start=\"0\">\n<li><strong>安装前的说明</strong></li>\n</ol>\n<p>此安装步骤是  <code>从头开始安装</code>  步骤，举例的脚本适用于大部分  <code>Linux</code>  操作系统。</p>\n<p>本文以  <code>CentOS 7.6 Linux</code>  操作系统为例，不同操作系统可能会有不同差别，需要用户自行对应到相应操作。</p>\n<p>整个安装过程需要使用  <code>root</code>  操作系统用户来完成。</p>\n<blockquote>\n<p><code>步骤1</code>  -  <code>步骤8</code>  均为软件环境安装步骤。如果你的操作已经具备当前步骤的软件或环境，此步骤可以跳过。</p>\n</blockquote>\n<p>PS：小白推荐使用宝塔安装环境，可以略过下面环境安装，不愿意使用宝塔可以按下面步骤搭建环境。</p>\n<ol>\n<li>准备操作系统环境</li>\n</ol>\n<p>选择合适的  <code>Linux</code>  发行版本，推荐使用  <code>CentOS 7.x</code> 。</p>\n<ul>\n<li>执行编译安装时需要保证机器至少有  <code>1800 MB</code>  内存，如果内存不足  <code>1800 MB</code>  请临时添加交换分区使可用内存到达  <code>1800 MB</code> 。</li>\n</ul>\n<pre><code># 临时增加 1000 MB Swap 空间\ndd if=/dev/zero of=/root/swap bs=1024 count=1000000\nmkswap /root/swap\nswapon /root/swap\n</code></pre>\n<p>为了顺利的设置必要的软件环境，以下的软件包必须安装到系统上。</p>\n<pre><code># 安装基础软件包\nyum install -y sudo tcl tk gettext autoconf gcc cmake3 wget initscripts openssh-server crontabs mailx sendmail pcre pcre-devel libcurl libcurl-devel libxml2 libxml2-devel openssl openssl-devel sqlite sqlite-devel libpng libpng-devel libwebp libwebp-devel libjpeg libjpeg-devel libXpm libXpm-devel freetype freetype-devel oniguruma oniguruma-devel libyaml libyaml-devel\n</code></pre>\n<p>除此之外，你还需要安装  <code>libzip 1.7+</code>  库，需要去官网下载源码包解压后安装。</p>\n<p>下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9saWJ6aXAub3JnL2Rvd25sb2FkLw==\">https://libzip.org/download/</span></p>\n<pre><code># 编译安装 libzip\ncd libzip-1.x.x\nmkdir build\ncd build\ncmake3 ../\nmake &amp;&amp; make install\nexport PKG_CONFIG_PATH=&quot;/usr/local/lib64/pkgconfig/:/usr/local/lib/pkgconfig/&quot;\n</code></pre>\n<ol start=\"2\">\n<li>安装 nginx</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cDovL25naW54Lm9yZy9lbi9kb3dubG9hZC5odG1s\">http://nginx.org/en/download.html</span> 下载  <code>Nginx</code>  源码解压后编译并安装安装到  <code>/usr/local/nginx</code>  目录下:</p>\n<pre><code># 安装 nginx 到 /usr/local/nginx 目录\ncd nginx-1.x.x\n./configure --prefix=/usr/local/nginx\nmake &amp;&amp; make install\n</code></pre>\n<ol start=\"3\">\n<li>安装 PHP</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGhwLm5ldC9kb3dubG9hZHM=\">https://www.php.net/downloads</span> 下载  <code>PHP</code>  源码 (推荐  <code>7.4</code>  版本)，解压后编译并安装到  <code>/usr/local/php</code>  目录下</p>\n<blockquote>\n<p>配置检查过程可能会提示缺少某些软件包，需要根据配置检查过程提示自行安装后再重复配置检查过程</p>\n</blockquote>\n<pre><code># 安装 php 到 /usr/local/php 目录\ncd php-7.4.x\n./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-fpm --enable-bcmath=shared --with-pdo_sqlite --with-gettext=shared --with-iconv --enable-ftp=shared --with-sqlite3 --enable-mbstring=shared --enable-sockets=shared --enable-soap=shared --with-openssl --with-zlib --with-curl=shared --enable-gd --with-freetype --with-jpeg --with-xpm --with-webp --with-mhash --enable-opcache --with-mysqli --without-pear --with-libdir=lib64 --with-zip --enable-mbstring --enable-pcntl\nmake &amp;&amp; make install\n</code></pre>\n<blockquote>\n<p><code>Codefever</code>  还需要以下  <code>PHP 扩展</code>  才能良好工作，按照下面地址下载并安装</p>\n</blockquote>\n<ul>\n<li>yaml : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZWNsLnBocC5uZXQvcGFja2FnZS95YW1s\">https://pecl.php.net/package/yaml</span></li>\n</ul>\n<pre><code># 安装 php yaml 扩展\ncd yaml-2.x.x\n/usr/local/php/bin/phpize\n./configure --with-php-config=/usr/local/php/bin/php-config\nmake &amp;&amp; make install\n</code></pre>\n<ol start=\"4\">\n<li>安装 Git</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLmVkZ2Uua2VybmVsLm9yZy9wdWIvc29mdHdhcmUvc2NtL2dpdC8=\">https://mirrors.edge.kernel.org/pub/software/scm/git/</span> 下载  <code>Git v2</code>  的源码，解压后编译并安装到  <code>/usr/local/git</code>  目录下</p>\n<pre><code># 安装 git v2 到 /usr/local/git 目录下\ncd git-2.x.x\n./configure --prefix=/usr/local/git\nmake &amp;&amp; make install\n</code></pre>\n<p>连接可执行二进制文件到  <code>/usr/local/bin</code>  目录下</p>\n<pre><code># 链接可执行文件\nln -s /usr/local/git/bin/git /usr/local/bin/\n</code></pre>\n<ol start=\"5\">\n<li>安装 Go (无需编译，二进制安装)</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb2xhbmcuZ29vZ2xlLmNuL2RsLw==\">https://golang.google.cn/dl/</span> 下载 1.16 版本以上的二进制安装包解压后复制到  <code>/usr/local/go</code>  目录下</p>\n<pre><code># 复制到 /usr/local\t目录下\ncp -R go /usr/local\n</code></pre>\n<p>连接可执行二进制文件到  <code>/usr/local/bin</code>  目录下</p>\n<pre><code># 链接可执行文件\nln -s /usr/local/go/bin/go /usr/local/bin/go\nln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt\n</code></pre>\n<ol start=\"6\">\n<li>安装 NodeJS (无需编译，二进制安装，开发或修改前端页面时使用)</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==\">https://nodejs.org/en/download/</span> 下载  <code>16.10</code>  以上  <code>LTS</code>  版本二进制安装包解压后复制到  <code>/usr/local/node</code>  目录下</p>\n<pre><code># 复制到 /usr/local\t目录下\ncp -R node-v16.x.x-os-arch /usr/local/node\n</code></pre>\n<p>连接可执行二进制文件到  <code>/usr/local/bin/</code>  目录下</p>\n<pre><code># 链接可执行文件\nln -s /usr/local/node/bin/node /usr/local/bin/node\nln -s /usr/local/node/bin/npm /usr/local/bin/npm\nln -s /usr/local/node/bin/npx /usr/local/bin/npx\nln -s /usr/local/node/bin/corepack /usr/local/bin/corepack\n</code></pre>\n<ol start=\"7\">\n<li>安装 Yarn</li>\n</ol>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly95YXJucGtnLmNvbS9nZXR0aW5nLXN0YXJ0ZWQvaW5zdGFsbA==\">https://yarnpkg.com/getting-started/install</span> 按照页面指导安装  <code>Yarn</code></p>\n<pre><code># NodeJS v16.10 以上打开 corepack 即可使用 Yarn\ncorepack enable\n</code></pre>\n<ol start=\"8\">\n<li>安装 MySQL/MariaDB (无需编译，镜像源安装)</li>\n</ol>\n<p>MySQL 不需要单独安装，直接使用系统自带软件工具安装软件包即可。需要安装于  <code>MySQL 5.7</code>  以上的相当版本。</p>\n<p>去官网按照指导使用镜像源安装二进制版本 (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpYWRiLm9yZy9kb3dubG9hZC8/dD1yZXBvLWNvbmZpZw==\">https://mariadb.org/download/?t=repo-config</span> 选择  <code>xTom GmbH - San Jose</code>  镜像)，如果你使用使用云数据库，你可以跳过此步骤。</p>\n<p>运行  <code>service mariadb start</code>  或  <code>service mysql start</code>  启动服务后使用  <code>mysql_secure_installation</code>  或  <code>mariadb-secure-installation</code>  初始化数据库</p>\n<p>* 当设置  <code>root</code>  密码为  <code>123456</code>  时，不需要在下一步中修改  <code>env.yaml</code>  中的数据库设置。</p>\n<p>如果你使用  <code>MySQL 5.7</code>  版本数据，需要修改  <code>SQL MODE</code>  变量，否则创建数据库时会报错，如果使用  <code>MariaDB</code>  可以忽略此选项。</p>\n<pre><code>set global sql_mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';\n</code></pre>\n<ol start=\"9\">\n<li>下载源码并安装</li>\n</ol>\n<p>去  <code>Github</code>  上下载源码并安装  <code>/data/www/codefever-comminuty</code>  目录下</p>\n<pre><code>mkdir -p /data/www\ncd /data/www\ngit clone https://github.com/PGYER/codefever.git codefever-community\ncd codefever-community\n</code></pre>\n<ul>\n<li>如果  <code>Github</code>  的  <code>HTTP</code>  服务访问速度较慢，可以尝试使用  <code>SSH</code>  服务（需要提前设置  <code>SSH Key</code> ）</li>\n</ul>\n<pre><code>git clone ssh://git@github.com:PGYER/codefever.git codefever-community\n</code></pre>\n<p>编译  <code>HTTP</code>  网关服务</p>\n<pre><code>cd /data/www/codefever-community/http-gateway\nexport GO111MODULE=off\nexport GOPROXY=https://mirrors.aliyun.com/goproxy\ngo get gopkg.in/yaml.v2\ngo build main.go\n</code></pre>\n<p>编译  <code>SSH</code>  网关服务</p>\n<pre><code>cd /data/www/codefever-community/ssh-gateway/shell\nexport GO111MODULE=off\nexport GOPROXY=https://mirrors.aliyun.com/goproxy\ngo get gopkg.in/yaml.v2\ngo build main.go\n</code></pre>\n<p>执行安装脚本</p>\n<pre><code>cd /data/www/codefever-community/misc\nsh ./install.sh\n</code></pre>\n<p>按照  <code>install.sh</code>  运行后提示修改  <code>env.yaml</code>  文件设置参数</p>\n<p>运行数据库迁移脚本</p>\n<pre><code>cd /data/www/codefever-community/misc\nsh ./create_db.sh\n</code></pre>\n<p>如果你不需要对 Code Fever 进行代码上的修改，或者将来不计划运行单元测试，可以删除测试数据</p>\n<pre><code>cd /data/www/codefever-community/misc\nsh ./remove_test_data.sh\n</code></pre>\n<p>为服务开启  <code>chkconfig</code>  以开机自动运行</p>\n<pre><code>chkconfig mariadb on # 或 chkconfig mysql on (根据安装的数据库类型, 如果使用云服务忽略此项目)\nchkconfig sendmail on\nchkconfig nginx on\nchkconfig php-fpm on\nchkconfig codefever on\nchkconfig crond on\n</code></pre>\n<p>尝试访问  <code>http://127.0.0.1</code>  或  <code>http://&lt;server ip&gt;</code>  来登录</p>\n<p>默认管理员用户:  <code>root@codefever.cn</code> , 密码:  <code>123456</code> 。登录后请修改密码并绑定 MFA 设备。</p>\n<h3 id=\"界面预览\"><a class=\"anchor\" href=\"#界面预览\">#</a> 界面预览</h3>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/aaf71720f1d27.png\" alt=\"image-20220418184608016\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/aeea87c075d3b.png\" alt=\"image-20220418184842684\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/45e0f2405079b.png\" alt=\"image-20220418184908216\" /></p>\n<p><img data-src=\"https://ics.iczkj.com/pic/2022/04/18/549e79a172487.png\" alt=\"image-20220418184931591\" /></p>\n<h3 id=\"写在最后\"><a class=\"anchor\" href=\"#写在最后\">#</a> 写在最后</h3>\n<p>其实这款平台非常好用，非常轻量，适合个人使用，美中不足的是不能从其他平台仓库直接克隆项目到本地服务端，只能通过自己手动上传，希望作者以后能增加这个功能。</p>\n","categories":[],"tags":[]}