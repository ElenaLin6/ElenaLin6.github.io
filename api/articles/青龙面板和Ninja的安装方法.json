{"title":"","slug":"青龙面板和Ninja的安装方法","date":"2021-08-20T04:42:29.882Z","updated":"2022-01-06T09:41:59.152Z","comments":true,"path":"api/articles/青龙面板和Ninja的安装方法.json","excerpt":null,"covers":null,"content":"<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90eGFmZi5jb20vaW5kZXgucGhwLzIwMjEvMDgvMDMvJUU5JTlEJTkyJUU5JUJFJTk5Mi04bmluamElRTYlODklQUIlRTclQTAlODElRTUlQUUlODklRTglQTMlODUlRTYlOTUlOTklRTclQTglOEIv\">青龙 2.8+Ninja 扫码安装教程</span></p>\n<ol>\n<li><strong>安装 docker</strong></li>\n</ol>\n<pre><code>#安装docker\nsudo yum update -y\ncurl -sSL https://get.daocloud.io/docker | sh\nsudo systemctl start docker\nsudo systemctl status docker\nsudo systemctl enable docker\n</code></pre>\n<ol>\n<li><strong>复制以下命令，直接回车执行安装青龙 2.8</strong></li>\n</ol>\n<pre><code>docker run -dit \\\n-v /root/ql/config:/ql/config \\\n-v /root/ql/db:/ql/db \\\n-v /root/ql/jbot:/ql/jbot \\\n-v /root/ql/log:/ql/log \\\n-v /root/ql/raw:/ql/raw \\\n-v /root/ql/repo:/ql/repo \\\n-v /root/ql/scripts:/ql/scripts \\\n-v /root/ql/ninja:/ql/ninja \\\n-p 6368:5700 \\\n-p 6:5701 \\\n-e ENABLE_HANGUP=true \\\n-e ENABLE_WEB_PANEL=true \\\n--name qinglong \\\n--hostname qinglong \\\n--restart always \\\nwhyour/qinglong:latest\n</code></pre>\n<p>首次请先去浏览器访问 <strong> <code>http://ip:5700/</code> </strong> 并输入账号密码，随后会生成默认密码</p>\n<p>再执行 <code>**cat /root/ql/config/auth.json |awk -F : '&#123;print $3&#125;'|awk -F '&quot;' '&#123;print $2&#125;'** </code> 查看青龙默认密码</p>\n<p><strong>青龙 2.8Faker 仓库一键配置</strong></p>\n<p>感谢 @oreo 大佬贡献配置</p>\n<pre><code>docker exec -it qinglong bash -c &quot;$(curl -fsSL https://raw.githubusercontents.com/Oreomeow/VIP/main/Scripts/sh/1customCDN.sh)&quot; \n</code></pre>\n<p>一键配置完成后，请访问面板执行一次初始化任务后再进行修复青龙面板依赖库</p>\n<pre><code>ql extra\n</code></pre>\n<p><strong>青龙面板依赖库修复方案</strong></p>\n<p>以<a href=\"https://github.com/shufflewzc/faker2\"><strong> Faker</strong></a> 仓库为例</p>\n<p>【axios date-fns 依赖安装命令】</p>\n<pre><code>docker exec -it qinglong bash -c &quot;npm install axios date-fns&quot;\n</code></pre>\n<p>【DOCKER npm 依赖安装命令】</p>\n<pre><code>docker exec -it qinglong bash -c &quot;cd scripts &amp;&amp; npm i -S png-js&quot;\n</code></pre>\n<p>【canvas 依赖安装命令】</p>\n<pre><code>docker exec -it qinglong bash -c &quot;apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev &amp;&amp; cd scripts &amp;&amp; npm install canvas --build-from-source&quot;\n</code></pre>\n<p>签到，宠汪汪兑换等依赖文件安装 (必装) 感谢 Oreo 提供方案</p>\n<pre><code>yum install wget unzip -y\ncd /root/ql/scripts\nwget https://ghproxy.com/https://github.com/shufflewzc/faker2/releases/download/0.0.1/utils.zip &amp;&amp; unzip utils.zip\n</code></pre>\n<ol>\n<li><strong>安装 Ninja 扫码</strong></li>\n</ol>\n<p>进入容器</p>\n<p>## qinglong 为容器名 本文机器容器名为 qinglong</p>\n<pre><code>docker exec -it qinglong bash\n</code></pre>\n<p>执行以下命令</p>\n<pre><code>git clone https://ghproxy.com/https://github.com/MoonBegonia/ninja.git /ql/ninja\ncd /ql/ninja/backend\npnpm install\npm2 start\ncp sendNotify.js /ql/scripts/sendNotify.js\n</code></pre>\n<p>将以下内容粘贴到 <span class=\"exturl\" data-url=\"aHR0cDovL2V4dHJhLnNo\">extra.sh</span>（重启后自动更新并启动 Ninja)</p>\n<p>如果用了上面的一键配置脚本，这一步可以忽略。只需要在 extra.sh 中第 29 行改为 UP 即可实现开机自启  <code>**Ninja=&quot;up&quot; ##up为运行，down为不运行**</code></p>\n<pre><code>cd /ql/ninja/backend\ngit checkout .\ngit pull\npnpm install\npm2 start\ncp sendNotify.js /ql/scripts/sendNotify.js\n</code></pre>\n<ol>\n<li><strong>Ninja 环境变量</strong></li>\n</ol>\n<p>目前支持的环境变量有：</p>\n<ul>\n<li>ALLOW_ADD: 是否允许添加账号 不允许添加时则只允许已有账号登录（默认 true）</li>\n<li>ALLOW_NUM: 允许添加账号的最大数量（默认 40）</li>\n<li>NINJA_PORT: Ninja 运行端口（默认 5701）</li>\n<li>NINJA_NOTIFY: 是否开启通知功能（默认 true）</li>\n<li>NINJA_UA: 自定义 UA，默认为随机</li>\n</ul>\n<p>配置方式：</p>\n<pre><code>cd /ql/ninja/backend\ncp .env.example .env\nvi .env\npm2 start\n</code></pre>\n<p><strong>修改完成后需要 pm2 start 重启生效 ！！！</strong></p>\n<p><strong>SendNotify 环境变量</strong></p>\n<p><strong>此环境变量在青龙中配置！！！</strong></p>\n<ul>\n<li>NOTIFY_SKIP_LIST: 通知黑名单，使用 &amp; 分隔，例如 东东乐园 &amp; 东东萌宠；</li>\n</ul>\n<p><strong>Ninja 自定义</strong></p>\n<p>自定义推送二维码：将 push.jpg 文件添加到 /ql/ninja/backend/static/ 目录下刷新网页即可。</p>\n<p>自定义常见活动：修改 /ql/backend/static/activity.json 即可</p>\n<p><strong>Ninja 注意事项</strong></p>\n<ul>\n<li>重启后务必执行一次 ql extra 保证 Ninja 配置成功。</li>\n<li>更新 Ninja 只需要在容器中 ninja/backend 目录执行 git pull 然后 pm2 start</li>\n<li>Qinglong 需要在登录状态（auth.json 中有 token）</li>\n</ul>\n<p><strong>Ninja 常见问题</strong></p>\n<blockquote>\n<p>为什么我 git pull 失败？<br />\nA：一般是修改过文件，先运行一次 git checkout . 再 git pull。还是不行就删了重拉。</p>\n<p>Q：为什么访问不了？<br />\nA：一般为端口映射错误 / 失败，请自行检查配置文件。</p>\n<p>Q：为什么访问白屏？<br />\nA：使用现代的浏览器，而不是古代的。</p>\n</blockquote>\n<blockquote>\n<p>备用库</p>\n</blockquote>\n<p>【lxk0301】</p>\n<pre><code>ql repo https://github.com/chinnkarahoi/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER&quot;\n</code></pre>\n<p>【龙珠】</p>\n<pre><code>qql repo https://github.com/longzhuzhu/nianyu.git &quot;qx&quot; &quot;main&quot;\n</code></pre>\n<p>【混沌】</p>\n<pre><code>ql repo https://github.com/whyour/hundun.git &quot;quanx&quot; &quot;tokens|caiyun|didi|donate|fold|Env&quot;\n</code></pre>\n<p>【passerby-b】（需要配合专用 ck 文件）</p>\n<pre><code>ql repo https://github.com/passerby-b/JDDJ.git &quot;jddj_&quot; &quot;scf_test_event&quot; &quot;jddj_cookie&quot;\n</code></pre>\n<p>【温某某】</p>\n<pre><code>ql repo https://github.com/Wenmoux/scripts.git &quot;jd&quot; &quot;&quot; &quot;&quot; &quot;wen&quot;\n</code></pre>\n<p>【柠檬（胖虎）】</p>\n<pre><code>ql repo https://github.com/panghu999/panghu.git &quot;jd_&quot;\n</code></pre>\n<p>【zoopanda（动物园）】</p>\n<pre><code>ql repo https://github.com/zooPanda/zoo.git\n</code></pre>\n<p>【Ariszy（Zhiyi-N）】</p>\n<pre><code>ql repo https://github.com/Ariszy/Private-Script.git &quot;JD&quot;\n</code></pre>\n<p>【ddo（hyzaw）】</p>\n<pre><code>ql repo https://github.com/hyzaw/scripts.git &quot;ddo_&quot;\n</code></pre>\n<p>【qqsdff】点点券</p>\n<pre><code>ql raw https://raw.githubusercontent.com/qqsdff/script/main/jd/jd_necklace.js\n</code></pre>\n<p>青龙拉取常用京东脚本库</p>\n<p>国内代理： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naHByb3h5LmNvbS9odHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc25neHByby9RdWFuWC9tYXN0ZXIvdGFzay9BbGxpbk9uZS5qc29u\">https://ghproxy.com/</span></p>\n<p>[Faker 集合仓库]</p>\n<p>(最全最新仓库，记得定时备份＋foker 更新)</p>\n<pre><code>ql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|ZooFaker_Necklace&quot;\n</code></pre>\n<p>【Faker 仓库依赖库修复】SSH 运行：</p>\n<pre><code>docker exec -it QL bash -c &quot;apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev &amp;&amp; cd scripts &amp;&amp; npm install canvas --build-from-source&quot;\n</code></pre>\n<p>【curtinlv 仓库】</p>\n<pre><code>ql repo https://github.com/curtinlv/JD-Script.git\n</code></pre>\n<p>【star】</p>\n<pre><code>ql repo https://github.com/star261/jd.git &quot;scripts&quot; &quot;code&quot;\n</code></pre>\n<p>【lxk0301】已私有，以下链接为备份库。柠檬代维护库。</p>\n<pre><code>ql repo https://github.com/shufflewzc/jd_scripts-2.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER&quot;\n</code></pre>\n<p>【龙珠】</p>\n<pre><code>ql repo https://github.com/longzhuzhu/nianyu.git &quot;qx&quot; “main”\n</code></pre>\n<p>【混沌】</p>\n<pre><code>ql repo https://github.com/whyour/hundun.git &quot;quanx&quot; &quot;tokens|caiyun|didi|donate|fold|Env&quot;\n</code></pre>\n<p>【passerby-b】（需要配合专用 ck 文件）</p>\n<pre><code>ql repo https://github.com/passerby-b/JDDJ.git &quot;jddj_&quot; &quot;scf_test_event&quot; &quot;jddj_cookie&quot;\n</code></pre>\n<p>【温某某】</p>\n<pre><code>ql repo https://ghproxy.com/https://github.com/shufflewzc/Wenmoux.git\n</code></pre>\n<p>【柠檬（胖虎）】</p>\n<pre><code>ql repo https://github.com/panghu999/panghu.git &quot;jd_&quot;\n</code></pre>\n<p>【zoopanda（动物园）】以下为备份库</p>\n<pre><code>ql repo https://github.com/shufflewzc/zoo.git &quot;zoo&quot;\n</code></pre>\n<p>【Ariszy（Zhiyi-N）】</p>\n<pre><code>ql repo https://github.com/shufflewzc/Ariszy.git &quot;JD&quot;\n</code></pre>\n<p>【ddo（hyzaw）】貌似已经删库 以下为备份</p>\n<pre><code>ql repo https://ghproxy.com/https://github.com/shufflewzc/hyzaw.git &quot;ddo_&quot;\n</code></pre>\n","more":"<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90eGFmZi5jb20vaW5kZXgucGhwLzIwMjEvMDgvMDMvJUU5JTlEJTkyJUU5JUJFJTk5Mi04bmluamElRTYlODklQUIlRTclQTAlODElRTUlQUUlODklRTglQTMlODUlRTYlOTUlOTklRTclQTglOEIv\">青龙 2.8+Ninja 扫码安装教程</span></p>\n<ol>\n<li><strong>安装 docker</strong></li>\n</ol>\n<pre><code>#安装docker\nsudo yum update -y\ncurl -sSL https://get.daocloud.io/docker | sh\nsudo systemctl start docker\nsudo systemctl status docker\nsudo systemctl enable docker\n</code></pre>\n<ol>\n<li><strong>复制以下命令，直接回车执行安装青龙 2.8</strong></li>\n</ol>\n<pre><code>docker run -dit \\\n-v /root/ql/config:/ql/config \\\n-v /root/ql/db:/ql/db \\\n-v /root/ql/jbot:/ql/jbot \\\n-v /root/ql/log:/ql/log \\\n-v /root/ql/raw:/ql/raw \\\n-v /root/ql/repo:/ql/repo \\\n-v /root/ql/scripts:/ql/scripts \\\n-v /root/ql/ninja:/ql/ninja \\\n-p 6368:5700 \\\n-p 6:5701 \\\n-e ENABLE_HANGUP=true \\\n-e ENABLE_WEB_PANEL=true \\\n--name qinglong \\\n--hostname qinglong \\\n--restart always \\\nwhyour/qinglong:latest\n</code></pre>\n<p>首次请先去浏览器访问 <strong> <code>http://ip:5700/</code> </strong> 并输入账号密码，随后会生成默认密码</p>\n<p>再执行 <code>**cat /root/ql/config/auth.json |awk -F : '&#123;print $3&#125;'|awk -F '&quot;' '&#123;print $2&#125;'** </code> 查看青龙默认密码</p>\n<p><strong>青龙 2.8Faker 仓库一键配置</strong></p>\n<p>感谢 @oreo 大佬贡献配置</p>\n<pre><code>docker exec -it qinglong bash -c &quot;$(curl -fsSL https://raw.githubusercontents.com/Oreomeow/VIP/main/Scripts/sh/1customCDN.sh)&quot; \n</code></pre>\n<p>一键配置完成后，请访问面板执行一次初始化任务后再进行修复青龙面板依赖库</p>\n<pre><code>ql extra\n</code></pre>\n<p><strong>青龙面板依赖库修复方案</strong></p>\n<p>以<a href=\"https://github.com/shufflewzc/faker2\"><strong> Faker</strong></a> 仓库为例</p>\n<p>【axios date-fns 依赖安装命令】</p>\n<pre><code>docker exec -it qinglong bash -c &quot;npm install axios date-fns&quot;\n</code></pre>\n<p>【DOCKER npm 依赖安装命令】</p>\n<pre><code>docker exec -it qinglong bash -c &quot;cd scripts &amp;&amp; npm i -S png-js&quot;\n</code></pre>\n<p>【canvas 依赖安装命令】</p>\n<pre><code>docker exec -it qinglong bash -c &quot;apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev &amp;&amp; cd scripts &amp;&amp; npm install canvas --build-from-source&quot;\n</code></pre>\n<p>签到，宠汪汪兑换等依赖文件安装 (必装) 感谢 Oreo 提供方案</p>\n<pre><code>yum install wget unzip -y\ncd /root/ql/scripts\nwget https://ghproxy.com/https://github.com/shufflewzc/faker2/releases/download/0.0.1/utils.zip &amp;&amp; unzip utils.zip\n</code></pre>\n<ol>\n<li><strong>安装 Ninja 扫码</strong></li>\n</ol>\n<p>进入容器</p>\n<p>## qinglong 为容器名 本文机器容器名为 qinglong</p>\n<pre><code>docker exec -it qinglong bash\n</code></pre>\n<p>执行以下命令</p>\n<pre><code>git clone https://ghproxy.com/https://github.com/MoonBegonia/ninja.git /ql/ninja\ncd /ql/ninja/backend\npnpm install\npm2 start\ncp sendNotify.js /ql/scripts/sendNotify.js\n</code></pre>\n<p>将以下内容粘贴到 <span class=\"exturl\" data-url=\"aHR0cDovL2V4dHJhLnNo\">extra.sh</span>（重启后自动更新并启动 Ninja)</p>\n<p>如果用了上面的一键配置脚本，这一步可以忽略。只需要在 extra.sh 中第 29 行改为 UP 即可实现开机自启  <code>**Ninja=&quot;up&quot; ##up为运行，down为不运行**</code></p>\n<pre><code>cd /ql/ninja/backend\ngit checkout .\ngit pull\npnpm install\npm2 start\ncp sendNotify.js /ql/scripts/sendNotify.js\n</code></pre>\n<ol>\n<li><strong>Ninja 环境变量</strong></li>\n</ol>\n<p>目前支持的环境变量有：</p>\n<ul>\n<li>ALLOW_ADD: 是否允许添加账号 不允许添加时则只允许已有账号登录（默认 true）</li>\n<li>ALLOW_NUM: 允许添加账号的最大数量（默认 40）</li>\n<li>NINJA_PORT: Ninja 运行端口（默认 5701）</li>\n<li>NINJA_NOTIFY: 是否开启通知功能（默认 true）</li>\n<li>NINJA_UA: 自定义 UA，默认为随机</li>\n</ul>\n<p>配置方式：</p>\n<pre><code>cd /ql/ninja/backend\ncp .env.example .env\nvi .env\npm2 start\n</code></pre>\n<p><strong>修改完成后需要 pm2 start 重启生效 ！！！</strong></p>\n<p><strong>SendNotify 环境变量</strong></p>\n<p><strong>此环境变量在青龙中配置！！！</strong></p>\n<ul>\n<li>NOTIFY_SKIP_LIST: 通知黑名单，使用 &amp; 分隔，例如 东东乐园 &amp; 东东萌宠；</li>\n</ul>\n<p><strong>Ninja 自定义</strong></p>\n<p>自定义推送二维码：将 push.jpg 文件添加到 /ql/ninja/backend/static/ 目录下刷新网页即可。</p>\n<p>自定义常见活动：修改 /ql/backend/static/activity.json 即可</p>\n<p><strong>Ninja 注意事项</strong></p>\n<ul>\n<li>重启后务必执行一次 ql extra 保证 Ninja 配置成功。</li>\n<li>更新 Ninja 只需要在容器中 ninja/backend 目录执行 git pull 然后 pm2 start</li>\n<li>Qinglong 需要在登录状态（auth.json 中有 token）</li>\n</ul>\n<p><strong>Ninja 常见问题</strong></p>\n<blockquote>\n<p>为什么我 git pull 失败？<br />\nA：一般是修改过文件，先运行一次 git checkout . 再 git pull。还是不行就删了重拉。</p>\n<p>Q：为什么访问不了？<br />\nA：一般为端口映射错误 / 失败，请自行检查配置文件。</p>\n<p>Q：为什么访问白屏？<br />\nA：使用现代的浏览器，而不是古代的。</p>\n</blockquote>\n<blockquote>\n<p>备用库</p>\n</blockquote>\n<p>【lxk0301】</p>\n<pre><code>ql repo https://github.com/chinnkarahoi/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER&quot;\n</code></pre>\n<p>【龙珠】</p>\n<pre><code>qql repo https://github.com/longzhuzhu/nianyu.git &quot;qx&quot; &quot;main&quot;\n</code></pre>\n<p>【混沌】</p>\n<pre><code>ql repo https://github.com/whyour/hundun.git &quot;quanx&quot; &quot;tokens|caiyun|didi|donate|fold|Env&quot;\n</code></pre>\n<p>【passerby-b】（需要配合专用 ck 文件）</p>\n<pre><code>ql repo https://github.com/passerby-b/JDDJ.git &quot;jddj_&quot; &quot;scf_test_event&quot; &quot;jddj_cookie&quot;\n</code></pre>\n<p>【温某某】</p>\n<pre><code>ql repo https://github.com/Wenmoux/scripts.git &quot;jd&quot; &quot;&quot; &quot;&quot; &quot;wen&quot;\n</code></pre>\n<p>【柠檬（胖虎）】</p>\n<pre><code>ql repo https://github.com/panghu999/panghu.git &quot;jd_&quot;\n</code></pre>\n<p>【zoopanda（动物园）】</p>\n<pre><code>ql repo https://github.com/zooPanda/zoo.git\n</code></pre>\n<p>【Ariszy（Zhiyi-N）】</p>\n<pre><code>ql repo https://github.com/Ariszy/Private-Script.git &quot;JD&quot;\n</code></pre>\n<p>【ddo（hyzaw）】</p>\n<pre><code>ql repo https://github.com/hyzaw/scripts.git &quot;ddo_&quot;\n</code></pre>\n<p>【qqsdff】点点券</p>\n<pre><code>ql raw https://raw.githubusercontent.com/qqsdff/script/main/jd/jd_necklace.js\n</code></pre>\n<p>青龙拉取常用京东脚本库</p>\n<p>国内代理： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naHByb3h5LmNvbS9odHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc25neHByby9RdWFuWC9tYXN0ZXIvdGFzay9BbGxpbk9uZS5qc29u\">https://ghproxy.com/</span></p>\n<p>[Faker 集合仓库]</p>\n<p>(最全最新仓库，记得定时备份＋foker 更新)</p>\n<pre><code>ql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|ZooFaker_Necklace&quot;\n</code></pre>\n<p>【Faker 仓库依赖库修复】SSH 运行：</p>\n<pre><code>docker exec -it QL bash -c &quot;apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev &amp;&amp; cd scripts &amp;&amp; npm install canvas --build-from-source&quot;\n</code></pre>\n<p>【curtinlv 仓库】</p>\n<pre><code>ql repo https://github.com/curtinlv/JD-Script.git\n</code></pre>\n<p>【star】</p>\n<pre><code>ql repo https://github.com/star261/jd.git &quot;scripts&quot; &quot;code&quot;\n</code></pre>\n<p>【lxk0301】已私有，以下链接为备份库。柠檬代维护库。</p>\n<pre><code>ql repo https://github.com/shufflewzc/jd_scripts-2.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER&quot;\n</code></pre>\n<p>【龙珠】</p>\n<pre><code>ql repo https://github.com/longzhuzhu/nianyu.git &quot;qx&quot; “main”\n</code></pre>\n<p>【混沌】</p>\n<pre><code>ql repo https://github.com/whyour/hundun.git &quot;quanx&quot; &quot;tokens|caiyun|didi|donate|fold|Env&quot;\n</code></pre>\n<p>【passerby-b】（需要配合专用 ck 文件）</p>\n<pre><code>ql repo https://github.com/passerby-b/JDDJ.git &quot;jddj_&quot; &quot;scf_test_event&quot; &quot;jddj_cookie&quot;\n</code></pre>\n<p>【温某某】</p>\n<pre><code>ql repo https://ghproxy.com/https://github.com/shufflewzc/Wenmoux.git\n</code></pre>\n<p>【柠檬（胖虎）】</p>\n<pre><code>ql repo https://github.com/panghu999/panghu.git &quot;jd_&quot;\n</code></pre>\n<p>【zoopanda（动物园）】以下为备份库</p>\n<pre><code>ql repo https://github.com/shufflewzc/zoo.git &quot;zoo&quot;\n</code></pre>\n<p>【Ariszy（Zhiyi-N）】</p>\n<pre><code>ql repo https://github.com/shufflewzc/Ariszy.git &quot;JD&quot;\n</code></pre>\n<p>【ddo（hyzaw）】貌似已经删库 以下为备份</p>\n<pre><code>ql repo https://ghproxy.com/https://github.com/shufflewzc/hyzaw.git &quot;ddo_&quot;\n</code></pre>\n","categories":[],"tags":[]}